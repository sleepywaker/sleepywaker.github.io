(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0afb"],{"3d40":function(t,e,a){},"7e2f":function(t){t.exports={art10:{path:"art10",title:"一些小段子",date:"2018-8-22",tag:"other",orgAddress:""},art9:{path:"art9",title:"vuex基础概念",date:"2018-8-19",tag:"vue",orgAddress:""},art8:{path:"art8",title:"vue图片懒加载",date:"2018-7-30",tag:"vue",orgAddress:""},art7:{path:"art7",title:"封装继承多态抽象面向对象4大特性",date:"2018-7-21",tag:"js",orgAddress:""},art6:{path:"art6",title:"函数、闭包概念",date:"2018-6-22",tag:"js",orgAddress:""},art5:{path:"art5",title:"js学习记录",date:"2018-6-19",tag:"js",orgAddress:""},art4:{path:"art4",title:"通过数组filter（）方法选取指定的元素",date:"2018-5-30",tag:"js",orgAddress:""},art3:{path:"art3",title:"css常用命名",date:"2018-5-21",tag:"css",orgAddress:""},art2:{path:"art2",title:"HTML语义化标签",date:"2018-4-22",tag:"html",orgAddress:""},art1:{path:"art1",title:"css布局基础",date:"2018-4-19",tag:"css",orgAddress:""}}},b891:function(t,e,a){},b92a:function(t,e,a){"use strict";var s=a("b891"),n=a.n(s);n.a},b993:function(t,e,a){"use strict";a.r(e);var s=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[a("div",{class:{infoShow:this.$store.state.isInfoShow,infoHide:!this.$store.state.isInfoShow}},[a("Header"),a("div",{staticClass:"archive"},[a("div",{staticClass:"article-content"},[a("p",{staticClass:"fontA"},[t._v(t._s(t.artList.title))]),a("p",[t._v(t._s(t.artList.date))]),a("p",[t._v("Vuex是一个专门为vue.js应用程序开发的状态管理模式（data函数内的变量称为状态）。\n\n              当构建一个大中型的单页面应用程序时，Vuex可以更好的帮助我们在组件外部统一管理状态。（可以理解为生成全局变量）\n              \n              Vuex核心概念\n              State ：State是唯一的数据源，单一状态树\n              Getters：通过getters可以派生出一些新的状态，基于state进行操作\n              Mutations：更改vuex的store中的状态的唯一方法是提交mutation\n              Actions：Action提交的是mutation，而不是直接变更状态；Action可以包含任意异步操作\n              Modules：面对复杂的应用程序，当管理的状态比较多时，我们需要将vuex的store对象分割成模块（modules）\n              \n              // 如果在模块化构建系统中，请确保在开头调用了 Vue.use(Vuex)\n              \n              const store = new Vuex.Store({\n                state: {\n                  count: 0\n                },\n                mutations: {\n                  increment (state) {\n                    state.count++\n                  }\n                }\n              })\n              \n              现在，你可以通过 store.state 来获取状态对象，以及通过 store.commit 方法触发状态变更：\n              \n              store.commit('increment')\n              \n              console.log(store.state.count) // -> 1\n              \n              \n          ")])])]),a("Footer")],1),a("Siteinfo")],1)},n=[],r=(a("3d40"),a("0418")),o=a("fd2d"),i=a("78d1"),d=a("7e2f"),c={data:function(){return{artList:""}},mounted:function(){this.getArticle()},components:{Header:r["a"],Footer:o["a"],Siteinfo:i["a"]},methods:{getArticle:function(){this.artList=d.art9}}},u=c,l=(a("b92a"),a("2877")),f=Object(l["a"])(u,s,n,!1,null,"4109eb4b",null);f.options.__file="art9.vue";e["default"]=f.exports}}]);
//# sourceMappingURL=chunk-0afb.83f120a7.js.map